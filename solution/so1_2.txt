클래스 메서드(static메서드)와 인스턴스 메서드의 차이

클래스(static) 메서드는 클래스(static) 변수처럼, 객체를 생성하지 않고도 
'클래스이름.메서드이름(매개변수)'와 같은 식으로 호출이 가능하다. 반면에
인스턴스 메서드는 반드시 객체를 생성해야만 호출할 수 있다.

그렇다면 어느 경우에 static을 사용해서 클래스 메서드로 정의해야하는 것일까?

인스턴스 메서드는 인스턴스 변수와 관련된 작업을 하는, 즉 메서드의 작업을 수행하는데
인스턴스 변수를 필요로 하는 메서드이다.
반면에, 인스턴스와 관계없는(인스턴스 변수나 인스턴스 메서드를 사용하지 않는) 메서드
를 클래스 메서드(static 메서드)로 정의한다.

1. 클래스를 설계할 때, 멤버변수 중 모든 인스턴스에 공통으로 사용하는 것에 static을
붙인다.
- 생성된 각 인스턴스는 서로 독립적이기 때문에 각 인스턴스의 변수(iv)는 서로 다른 값
을 유지한다. 그러나 모든 인스턴스에서 같은 값이 유지되어야 하는 변수는 static을 붙여서
클래스변수로 정의해야 한다.

2. 클래스 변수(static 변수)는 인스턴스를 생성하지 않아도 사용할 수 있다.
- static이 붙은 변수(클래스 변수)는 클래스가 메모리에 올라갈 때 이미 자동적으로 생성되기 
때문이다.

3. 클래스 메서드(static 메서드)는 인스턴스 변수를 사용할 수 없다.
- 인스턴스변수는 인스턴스가 반드시 존재해야만 사용할 수 있는데, 클래스메서드는 인스턴스
생성 없이 호출가능하므로 클래스 메서드가 호출되었을 때 인스턴스가 존재하지 않을 수도 있다.
그래서 클래스 메서드에서 인스턴스변수의 사용을 금지한다. 
반면에 인스턴스변수나 인스턴스메서드에서는 static이 붙은 멤버들을 사용하는 것이 언제나 
가능하다. 인스턴스 변수가 존재한다는 것은 static변수가 이미 메모리에 존재한다는 것을 의미
하기 때문이다.

4. 메서드 내에서 인스턴스 변수를 사용하지 않는다면, static을 붙이는 것을 고려한다.
- 메서드의 작업내용 중에서 인스턴스변수를 필요로 한다면, static을 붙일 수 없다. 반대로
인스턴스변수를 필요로 하지 않는다면 static을 붙이자. 메서드 호출시간이 짧아지므로 성능이
향상된다. static을 안 붙인 메서드(인스턴스메서드)는 실행 시 호출되어야할 메서드를 찾는
과정이 추가적으로 필요하기 때문에 시간이 더 걸린다.


