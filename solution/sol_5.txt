패키지란?

패키지란, 클래스의 묶음이다. 패키지에는 클래스 또는 인터페이스를 포함시킬 수 있으며,
서로 관련된 클래스들끼리 그룹 단위로 묶어 놓음으로써 클래스를 효율적으로 관리할 수 있다.
같은 이름의 클래스 일지라도 서로 다른 패키지에 존재하는 것이 가능하므로, 자신만의 패키지
체계를 유지함으로써 다른 개발자가 개발한 클래스 라이브러리의 클래스와 이름이 충돌하는 것
을 피할 수 있다.
클래스의 실제 이름(full name)은 패키지 명을 포함한 것이다.
예를 들면 String클래스의 실제 이름은 java.lang.String이다. java.lang패키지에 속한
String클래스라는 의미이다. 그래서 같은 이름의 클래스일 지라도 서로 다른 패키지에 속하면 
패키지명으로 구별이 가능하다.

클래스가 물리적으로 하나의 클래스파일(.class)인 것과 같이 패키지는 물리적으로 하나의
디렉토리이다. 그래서 어떤 패키지에 속하 클래스는 해당 디렉토리에 존재하는 클래스파일(.class)
이어야 한다.

소스코드를 작성할 때 다른 패키지의 클래스를 사용하려면 패키지명이 포함된 클래스 이름을
사용해야 한다. 
클래스의 코드를 작성하기 전에 import문으로 사용하고자 하는 클래스의 패키지를 미리 명시
해주면 소스코드에 사용되는 클래스이름에서 패키지명은 생략할 수 있다.

한 패키지에서 여러 클래스를 사용하는 경우 클래스의 이름을 일일이 지정해주는 것보다
'패키지명.*'과 같이 하는 것이 편리하다.
하지만, import하는 패키지의 수가 많을 때는 어느 클래스가 어느 패키지에 속하는지 구별하기
어렵다는 단점이 있다.

한가지 더 알아두어야 할 것은 import문에서 클래스의 이름대신 '*'을 사용하는 것이 하위 패키지
의 클래스까지 포함하는 것은 아니라는 것이다.

import java.util.*;
import java.text.*;
 
위의 두 문장 대신 다음과 같이 할 수는 없다.

import java.*;



