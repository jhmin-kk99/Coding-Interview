람다식이란? 스트림이란?

람다식의 도입으로 인해, 자바는 객체지향언어인 도이에 함수형 언어가 되었다. 
람다식(Lambda expression)은 간단히 말해서 메서드를 하나의 '식(expression)'으로 표현한 것이다.
람다식은 함수를 간략하면서도 명확한 식으로 표현할 수 있게 해준다. 메서드를 람다식으로 표현하면
메서드의 이름과 반환값이 없어지므로, 람다식을 '익명함수(anonymous function)'이라고도 한다.

int[] arr = new int[5];
Arrays.setAll(arr, (i)->(int)(Math.random()*5)+1);

모든 메서드는 클래스에 포함되어야 하므로 클래스도 새로 만들어야 하고, 객체도 생성해야만 비로소 이 메
서드를 호출할 수 있다. 그러나 람다식은 이 모든 과정없이 오직 람다식 자체만으로도 이 메서드의 역할을 대
신할 수 있다. 게다가 람다식은 메서드의 매개변수로 전달되어지는 것이 가능하고, 메서드의 결과로 반환될
수도 있다. 람다식으로 인해 메서드를 변수처럼 다루는 것이 가능해진 것이다. 

int max(int a, int b){
  return a > b ? a : b;
}
->
(a, b) -> a > b ? a : b

void printVar(String name, int i){
  System.out.println(name + "=" + i);
}
->
(name, i) -> System.out.println(name + "=" + i);

int square(int x){
  return x * x;
}
->
x -> x * x 

int roll(){
  return (int)(Math.random() * 6);
}
->
() -> (int)(Math.random() * 6)

int sumArr(int[] arr){
  int sum = 0;
  for(int i : arr)
    sum += i;
  return sum;
}
->
(int[] arr) -> {
  int sum = 0;
  for(int i : arr)
    sum += i;
  return sum;
}

자바에서 모든 메서드는 클래스 내에 포함되어야 하는데, 람다식은 어떤 클래스에 포함되는 것일까?
람다식은 익명 클래스의 객체와 동등하다.

interface MyFunction{
  public abstract int max(int a, int b);
}
MyFunction f = new MyFunction(){
  public int max(int a, int b){
    return a > b ? a : b;
  }
};
int big = f.max(5, 3); // 익명 객체의 메서드를 호출



